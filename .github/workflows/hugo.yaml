name: Hugo Site EI Release

on:
  # Trigger the workflow on push events to the main branch
  push:
    branches:
      - main

  # Manual trigger option for the workflow in the Actions tab
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  deployments: write

concurrency:
  group: "deploy"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  # Job to build the site
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.121.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Build Site with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify
      - name: List Public Directory Contents
        run: ls -la public/

      - name: Archive public directory
        run: tar -czvf ei.tar.gz ./public

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: public
          path: ei.tar.gz

      # Deploy to Vercel
#      - name: Deploy to Vercel
#        uses: amondnet/vercel-action@v20
#        with:
#          vercel-token: ${{ secrets.VERCEL_TOKEN }}  # Replace with your Vercel token secret
#          vercel-args: '--prod'  # Optional: Add any additional arguments for Vercel deployment
#          working-directory: ./public  # Specify your build output directory

  # Deployment job
  deploy:
    environment:
      name: github-pages  # 定义环境名称
      url: ${{ steps.deployment.outputs.page_url }}  # 用于展示部署完成后的页面 URL
    runs-on: ubuntu-latest
    needs: build  # 确保在 build 作业完成后执行部署作业
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3  # 使用 GitHub Pages 部署 Action
        with:
          branch: gh-pages  # 指定要部署到的分支（通常是 gh-pages）
          folder: public     # 指定生成的文件夹

  # Job to create a release
  release:
    runs-on: ubuntu-latest
    needs: build # Ensure the build job completes before this job starts
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: public

      - name: Create tag
        run: git tag v1.0.0 && git push origin v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use a personal access token for authentication

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0  # Specify the release version
          name: Release v1.0.0  # Use 'name' instead of 'release_name'
          body: |
            This is the release of version 1.0.0.
          files: ei.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token for authentication

